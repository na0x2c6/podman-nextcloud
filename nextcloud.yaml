# Save the output of this file and use kubectl create -f to import
# it into Kubernetes.
#
# Created with podman-4.8.3
apiVersion: v1
kind: Pod
metadata:
  annotations:
  creationTimestamp: "2024-01-28T05:05:09Z"
  labels:
    app: nextcloud
  name: nextcloud
spec:
  containers:
  - args:
    - redis-server
    image: docker.io/library/redis:latest
    name: nc-redis
    ports:
    - containerPort: 80
      hostPort: 8080
    volumeMounts:
    - mountPath: /data
      name: redis-data-pvc
  - args:
    - postgres
    env:
    - name: POSTGRES_PASSWORD
      value: nextcloud
    - name: POSTGRES_DB
      value: nextcloud
    - name: POSTGRES_USER
      value: nextcloud
    - name: LANG
      value: ja_JP.utf8
    - name: POSTGRES_INITDB_ARGS
      value: --locale-provider=icu --icu-locale=ja_JP.utf8
    image: docker.io/library/postgres:alpine
    name: nc-postgres
    volumeMounts:
    - mountPath: /var/lib/postgresql/data
      name: nc-db-pvc
  - args:
    - php-fpm
    env:
    - name: POSTGRES_DB
      value: nextcloud
    - name: POSTGRES_USER
      value: nextcloud
    - name: REDIS_HOST
      value: 127.0.0.1
    - name: POSTGRES_HOST
      value: 127.0.0.1
    - name: POSTGRES_PASSWORD
      value: nextcloud
    image: localhost/nc-app:latest
    name: nc-app
    volumeMounts:
    - mountPath: /var/www/html
      name: nc-pvc
  - args:
    - nginx
    - -g
    - daemon off;
    image: localhost/nc-nginx:latest
    name: nc-web
    volumeMounts:
    - mountPath: /var/www/html
      name: nc-pvc
      readOnly: true
  - command:
    - /cron.sh
    image: docker.io/library/nextcloud:production-fpm
    name: nc-cron
    volumeMounts:
    - mountPath: /var/www/html
      name: nc-pvc
  volumes:
  - name: nc-db-pvc
    persistentVolumeClaim:
      claimName: nc-db
  - name: nc-pvc
    persistentVolumeClaim:
      claimName: nc
  - name: redis-data-pvc
    persistentVolumeClaim:
      claimName: redis-data
